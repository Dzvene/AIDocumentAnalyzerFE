name: Build and Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  REACT_APP_API_URL: http://api.clearcontract.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: |
        npm install --package-lock-only
        npm ci
    
    - name: Build application
      run: npm run build
      env:
        CI: false
        REACT_APP_API_URL: ${{ env.REACT_APP_API_URL }}
        NODE_OPTIONS: --max-old-space-size=4096
    
    - name: Check build output
      run: |
        if [ -d "dist" ]; then
          echo "BUILD_DIR=dist" >> $GITHUB_ENV
        elif [ -d "build" ]; then
          echo "BUILD_DIR=build" >> $GITHUB_ENV
        else
          echo "Error: No build output directory found"
          exit 1
        fi
        echo "Build directory: $BUILD_DIR"
        ls -la $BUILD_DIR
    
    - name: Compress build artifacts
      run: |
        tar -czf build-artifact.tar.gz -C ${{ env.BUILD_DIR }} .
        echo "Artifact size: $(du -h build-artifact.tar.gz | cut -f1)"
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ui-build-${{ github.sha }}
        path: build-artifact.tar.gz
        retention-days: 30
    
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Automated release from commit ${{ github.sha }}
          
          ## Changes
          - Build created from master branch
          - Commit: ${{ github.event.head_commit.message }}
          
          ## Deployment
          Extract artifact to `/var/www/aidocument/ui/`
        draft: false
        prerelease: false
        artifacts: build-artifact.tar.gz
    
    
    - name: Build Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Node Version:** ${{ env.NODE_VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **API URL:** ${{ env.REACT_APP_API_URL }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Directory:** ${{ env.BUILD_DIR }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Artifact Size:** $(du -h build-artifact.tar.gz | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY