import React, { useState, useEffect } from 'react'
import { Link, useNavigate } from 'react-router-dom'
import { ROUTES } from '@constants/routes'
import { adminApi } from '@api/adminApi'
import type { DashboardStats, RecentActivity, TopProduct, TopShop } from '@types/interfaces/admin'
import './AdminDashboard.scss'

export const AdminDashboard: React.FC = () => {
  const navigate = useNavigate()
  
  const [stats, setStats] = useState<DashboardStats>({
    totalUsers: 0,
    totalShops: 0,
    totalProducts: 0,
    totalOrders: 0,
    totalRevenue: 0,
    pendingOrders: 0,
    activeUsers: 0,
    newUsersToday: 0
  })
  
  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([])
  const [topProducts, setTopProducts] = useState<TopProduct[]>([])
  const [topShops, setTopShops] = useState<TopShop[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    window.scrollTo(0, 0)
    loadDashboardData()
    
    // Check admin authentication (would be replaced with real auth check)
    const isAdmin = localStorage.getItem('isAdmin') === 'true'
    if (!isAdmin) {
      navigate(ROUTES.LOGIN)
      return
    }
  }, [navigate])

  const loadDashboardData = async () => {
    setLoading(true)
    
    try {
      // Load data from API
      const [statsData, activityData, topProductsData, topShopsData] = await Promise.all([
        adminApi.getDashboardStats(),
        adminApi.getRecentActivity(5),
        adminApi.getTopProducts(4),
        adminApi.getTopShops(4)
      ])
      
      setStats(statsData)
      setRecentActivity(activityData)
      setTopProducts(topProductsData)
      setTopShops(topShopsData)
      
    } catch (error) {
      console.error('Error loading dashboard data:', error)
      
      // Fallback to mock data if API fails
      setStats({
        totalUsers: 15247,
        totalShops: 1834,
        totalProducts: 45632,
        totalOrders: 8956,
        totalRevenue: 2847500,
        pendingOrders: 127,
        activeUsers: 1543,
        newUsersToday: 47
      })

      setRecentActivity([
        {
          id: '1',
          type: 'order',
          message: '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #ORD-2025-001234 –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
          timestamp: new Date(Date.now() - 300000).toISOString(),
          status: 'success'
        },
        {
          id: '2',
          type: 'shop',
          message: '–ú–∞–≥–∞–∑–∏–Ω "–§–µ—Ä–º–µ—Ä—Å–∫–∞—è –ª–∞–≤–∫–∞" –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é',
          timestamp: new Date(Date.now() - 900000).toISOString(),
          status: 'info'
        },
        {
          id: '3',
          type: 'user',
          message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞ –ø–æ–¥–∞–ª–∞ –∂–∞–ª–æ–±—É –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É',
          timestamp: new Date(Date.now() - 1800000).toISOString(),
          status: 'warning'
        },
        {
          id: '4',
          type: 'product',
          message: '–¢–æ–≤–∞—Ä "–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ —è–±–ª–æ–∫–∏" –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ',
          timestamp: new Date(Date.now() - 3600000).toISOString(),
          status: 'error'
        },
        {
          id: '5',
          type: 'order',
          message: '–ó–∞–∫–∞–∑ #ORD-2025-001230 –æ—Ç–º–µ–Ω–µ–Ω –∫–ª–∏–µ–Ω—Ç–æ–º',
          timestamp: new Date(Date.now() - 7200000).toISOString(),
          status: 'warning'
        }
      ])

      setTopProducts([
        {
          id: '1',
          name: '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ —è–±–ª–æ–∫–∏ –ì–æ–ª–¥–µ–Ω',
          image: '/images/products/apples.jpg',
          sales: 342,
          revenue: 51300,
          category: '–§—Ä—É–∫—Ç—ã'
        },
        {
          id: '2',
          name: '–ú–æ–ª–æ–∫–æ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–µ 3.2%',
          image: '/images/products/milk.jpg',
          sales: 287,
          revenue: 25830,
          category: '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'
        },
        {
          id: '3',
          name: '–•–ª–µ–± —Ä–µ–º–µ—Å–ª–µ–Ω–Ω—ã–π –Ω–∞ –∑–∞–∫–≤–∞—Å–∫–µ',
          image: '/images/products/bread.jpg',
          sales: 198,
          revenue: 23760,
          category: '–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ'
        },
        {
          id: '4',
          name: '–°—ã—Ä —Ç–≤–µ—Ä–¥—ã–π "–†–æ—Å—Å–∏–π—Å–∫–∏–π"',
          image: '/images/products/cheese.jpg',
          sales: 156,
          revenue: 62400,
          category: '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'
        }
      ])

      setTopShops([
        {
          id: '1',
          name: '–§–µ—Ä–º–µ—Ä—Å–∫–∞—è –ª–∞–≤–∫–∞',
          logo: '/images/shops/farm.jpg',
          orders: 1247,
          revenue: 456789,
          rating: 4.9
        },
        {
          id: '2',
          name: '–ü–µ–∫–∞—Ä–Ω—è "–¢—Ä–∞–¥–∏—Ü–∏—è"',
          logo: '/images/shops/bakery.jpg',
          orders: 856,
          revenue: 234567,
          rating: 4.7
        },
        {
          id: '3',
          name: '–ú—è—Å–Ω–∞—è –ª–∞–≤–∫–∞ "–ü—Ä–µ–º–∏—É–º"',
          logo: '/images/shops/meat.jpg',
          orders: 634,
          revenue: 567890,
          rating: 4.8
        },
        {
          id: '4',
          name: '–û–≤–æ—â–∏ & –§—Ä—É–∫—Ç—ã',
          logo: '/images/shops/vegetables.jpg',
          orders: 523,
          revenue: 187432,
          rating: 4.6
        }
      ])
    } finally {
      setLoading(false)
    }
  }

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      minimumFractionDigits: 0
    }).format(amount)
  }

  const formatNumber = (num: number) => {
    return new Intl.NumberFormat('ru-RU').format(num)
  }

  const getActivityIcon = (type: RecentActivity['type']) => {
    switch (type) {
      case 'order': return 'üì¶'
      case 'user': return 'üë§'
      case 'shop': return 'üè™'
      case 'product': return 'üì±'
      default: return 'üîî'
    }
  }

  const getActivityStatusClass = (status: RecentActivity['status']) => {
    return `activity-status-${status}`
  }

  const getTimeAgo = (timestamp: string) => {
    const now = new Date()
    const time = new Date(timestamp)
    const diffInMinutes = Math.floor((now.getTime() - time.getTime()) / (1000 * 60))
    
    if (diffInMinutes < 1) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ'
    if (diffInMinutes < 60) return `${diffInMinutes} –º–∏–Ω –Ω–∞–∑–∞–¥`
    
    const diffInHours = Math.floor(diffInMinutes / 60)
    if (diffInHours < 24) return `${diffInHours} —á –Ω–∞–∑–∞–¥`
    
    const diffInDays = Math.floor(diffInHours / 24)
    return `${diffInDays} –¥–Ω –Ω–∞–∑–∞–¥`
  }

  if (loading) {
    return (
      <div className="admin-dashboard-loading">
        <div className="container">
          <div className="loading-content">
            <div className="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="admin-dashboard-page">
      <div className="page-header">
        <div className="container">
          <div className="header-content">
            <div className="header-main">
              <h1>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>
              <p>–û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π</p>
            </div>
            
            <div className="header-actions">
              <button className="refresh-btn" onClick={loadDashboardData}>
                üîÑ –û–±–Ω–æ–≤–∏—Ç—å
              </button>
              <Link to="/admin/settings" className="settings-btn">
                ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
              </Link>
            </div>
          </div>
        </div>
      </div>

      <div className="container">
        <div className="dashboard-content">
          {/* Stats Cards */}
          <div className="stats-grid">
            <div className="stat-card primary">
              <div className="stat-icon">üë•</div>
              <div className="stat-content">
                <h3>{formatNumber(stats.totalUsers)}</h3>
                <p>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
                <span className="stat-change positive">+{stats.newUsersToday} —Å–µ–≥–æ–¥–Ω—è</span>
              </div>
            </div>

            <div className="stat-card secondary">
              <div className="stat-icon">üè™</div>
              <div className="stat-content">
                <h3>{formatNumber(stats.totalShops)}</h3>
                <p>–ê–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤</p>
                <span className="stat-change neutral">+12 —ç—Ç–æ—Ç –º–µ—Å—è—Ü</span>
              </div>
            </div>

            <div className="stat-card success">
              <div className="stat-icon">üì±</div>
              <div className="stat-content">
                <h3>{formatNumber(stats.totalProducts)}</h3>
                <p>–¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ</p>
                <span className="stat-change positive">+234 –∑–∞ –Ω–µ–¥–µ–ª—é</span>
              </div>
            </div>

            <div className="stat-card warning">
              <div className="stat-icon">üì¶</div>
              <div className="stat-content">
                <h3>{formatNumber(stats.totalOrders)}</h3>
                <p>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</p>
                <span className="stat-change attention">{stats.pendingOrders} –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ</span>
              </div>
            </div>

            <div className="stat-card revenue">
              <div className="stat-icon">üí∞</div>
              <div className="stat-content">
                <h3>{formatCurrency(stats.totalRevenue)}</h3>
                <p>–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç</p>
                <span className="stat-change positive">+15.3% –∫ –ø—Ä–æ—à–ª–æ–º—É –º–µ—Å—è—Ü—É</span>
              </div>
            </div>

            <div className="stat-card info">
              <div className="stat-icon">üî•</div>
              <div className="stat-content">
                <h3>{formatNumber(stats.activeUsers)}</h3>
                <p>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–π—á–∞—Å</p>
                <span className="stat-change positive">–ü–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</span>
              </div>
            </div>
          </div>

          <div className="dashboard-main">
            <div className="main-content">
              {/* Recent Activity */}
              <div className="activity-section">
                <div className="section-header">
                  <h2>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
                  <Link to="/admin/activity" className="view-all-btn">
                    –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ
                  </Link>
                </div>
                
                <div className="activity-list">
                  {recentActivity.map(activity => (
                    <div 
                      key={activity.id} 
                      className={`activity-item ${getActivityStatusClass(activity.status)}`}
                    >
                      <div className="activity-icon">
                        {getActivityIcon(activity.type)}
                      </div>
                      <div className="activity-content">
                        <p className="activity-message">{activity.message}</p>
                        <span className="activity-time">{getTimeAgo(activity.timestamp)}</span>
                      </div>
                      <div className="activity-status">
                        <span className={`status-dot ${activity.status}`}></span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Quick Actions */}
              <div className="quick-actions-section">
                <div className="section-header">
                  <h2>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
                </div>
                
                <div className="actions-grid">
                  <Link to="/admin/users" className="action-card">
                    <div className="action-icon">üë•</div>
                    <div className="action-content">
                      <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h3>
                      <p>–ü—Ä–æ—Å–º–æ—Ç—Ä, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
                    </div>
                  </Link>

                  <Link to="/admin/shops" className="action-card">
                    <div className="action-icon">üè™</div>
                    <div className="action-content">
                      <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏</h3>
                      <p>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–≤</p>
                    </div>
                  </Link>

                  <Link to="/admin/orders" className="action-card">
                    <div className="action-icon">üì¶</div>
                    <div className="action-content">
                      <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏</h3>
                      <p>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–∫–∞–∑–∞–º–∏</p>
                    </div>
                  </Link>

                  <Link to="/admin/products" className="action-card">
                    <div className="action-icon">üì±</div>
                    <div className="action-content">
                      <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏</h3>
                      <p>–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤</p>
                    </div>
                  </Link>

                  <Link to="/admin/categories" className="action-card">
                    <div className="action-icon">üìã</div>
                    <div className="action-content">
                      <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏</h3>
                      <p>–°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</p>
                    </div>
                  </Link>

                  <Link to="/admin/settings" className="action-card">
                    <div className="action-icon">‚öôÔ∏è</div>
                    <div className="action-content">
                      <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h3>
                      <p>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</p>
                    </div>
                  </Link>
                </div>
              </div>
            </div>

            <div className="sidebar">
              {/* Top Products */}
              <div className="top-products-section">
                <div className="section-header">
                  <h3>–¢–æ–ø —Ç–æ–≤–∞—Ä—ã</h3>
                  <Link to="/admin/products" className="view-all-btn">
                    –í—Å–µ —Ç–æ–≤–∞—Ä—ã
                  </Link>
                </div>
                
                <div className="products-list">
                  {topProducts.map((product, index) => (
                    <div key={product.id} className="product-item">
                      <div className="product-rank">#{index + 1}</div>
                      <div className="product-image">
                        <img src={product.image} alt={product.name} />
                      </div>
                      <div className="product-info">
                        <h4>{product.name}</h4>
                        <p className="product-category">{product.category}</p>
                        <div className="product-stats">
                          <span className="sales">{product.sales} –ø—Ä–æ–¥–∞–∂</span>
                          <span className="revenue">{formatCurrency(product.revenue)}</span>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Top Shops */}
              <div className="top-shops-section">
                <div className="section-header">
                  <h3>–¢–æ–ø –º–∞–≥–∞–∑–∏–Ω—ã</h3>
                  <Link to="/admin/shops" className="view-all-btn">
                    –í—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã
                  </Link>
                </div>
                
                <div className="shops-list">
                  {topShops.map((shop, index) => (
                    <div key={shop.id} className="shop-item">
                      <div className="shop-rank">#{index + 1}</div>
                      <div className="shop-logo">
                        <img src={shop.logo} alt={shop.name} />
                      </div>
                      <div className="shop-info">
                        <h4>{shop.name}</h4>
                        <div className="shop-rating">
                          ‚≠ê {shop.rating}
                        </div>
                        <div className="shop-stats">
                          <span className="orders">{shop.orders} –∑–∞–∫–∞–∑–æ–≤</span>
                          <span className="revenue">{formatCurrency(shop.revenue)}</span>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}