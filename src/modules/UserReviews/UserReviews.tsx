import React, { useState, useEffect } from 'react'
import { Link } from 'react-router-dom'
import { ROUTES } from '@constants/routes'
import './UserReviews.scss'

interface Review {
  id: string
  productId: string
  productName: string
  productImage: string
  shopId: string
  shopName: string
  orderId: string
  rating: number
  title: string
  comment: string
  pros: string[]
  cons: string[]
  images: string[]
  isRecommended: boolean
  isAnonymous: boolean
  createdAt: string
  updatedAt?: string
  likes: number
  dislikes: number
  helpfulVotes: number
  status: 'published' | 'pending' | 'rejected'
  moderatorComment?: string
  isVerifiedPurchase: boolean
}

export const UserReviews: React.FC = () => {
  const [reviews, setReviews] = useState<Review[]>([
    {
      id: '1',
      productId: 'prod-1',
      productName: '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ —è–±–ª–æ–∫–∏ –ì–æ–ª–¥–µ–Ω',
      productImage: '/images/products/apples.jpg',
      shopId: 'shop-1',
      shopName: '–§–µ—Ä–º–µ—Ä—Å–∫–∞—è –ª–∞–≤–∫–∞',
      orderId: 'ORD-2025-001234',
      rating: 5,
      title: '–û—Ç–ª–∏—á–Ω—ã–µ —è–±–ª–æ–∫–∏!',
      comment: '–û—á–µ–Ω—å –≤–∫—É—Å–Ω—ã–µ –∏ —Å–æ—á–Ω—ã–µ —è–±–ª–æ–∫–∏. –î–æ—Å—Ç–∞–≤–∏–ª–∏ –±—ã—Å—Ç—Ä–æ, —É–ø–∞–∫–æ–≤–∫–∞ —Ö–æ—Ä–æ—à–∞—è. –ë—É–¥—É –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –µ—â–µ.',
      pros: ['–í–∫—É—Å–Ω—ã–µ', '–°–≤–µ–∂–∏–µ', '–•–æ—Ä–æ—à–∞—è —É–ø–∞–∫–æ–≤–∫–∞'],
      cons: ['–¶–µ–Ω–∞ –Ω–µ–º–Ω–æ–≥–æ –≤—ã—Å–æ–∫–∞—è'],
      images: ['/images/reviews/review1_1.jpg'],
      isRecommended: true,
      isAnonymous: false,
      createdAt: '2025-01-10T15:30:00',
      likes: 12,
      dislikes: 1,
      helpfulVotes: 8,
      status: 'published',
      isVerifiedPurchase: true
    },
    {
      id: '2',
      productId: 'prod-2',
      productName: '–ú–æ–ª–æ–∫–æ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–µ 3.2%',
      productImage: '/images/products/milk.jpg',
      shopId: 'shop-1',
      shopName: '–§–µ—Ä–º–µ—Ä—Å–∫–∞—è –ª–∞–≤–∫–∞',
      orderId: 'ORD-2025-001233',
      rating: 4,
      title: '–•–æ—Ä–æ—à–µ–µ –º–æ–ª–æ–∫–æ',
      comment: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–æ–ª–æ–∫–æ, –Ω–æ –Ω–µ–º–Ω–æ–≥–æ –¥–æ—Ä–æ–≥–æ–≤–∞—Ç–æ. –í–∫—É—Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π, –±–µ–∑ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –ø—Ä–∏–≤–∫—É—Å–æ–≤.',
      pros: ['–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –≤–∫—É—Å', '–•–æ—Ä–æ—à–∞—è –∂–∏—Ä–Ω–æ—Å—Ç—å'],
      cons: ['–î–æ—Ä–æ–≥–æ', '–ö–æ—Ä–æ—Ç–∫–∏–π —Å—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è'],
      images: [],
      isRecommended: true,
      isAnonymous: false,
      createdAt: '2025-01-08T10:20:00',
      updatedAt: '2025-01-08T10:25:00',
      likes: 5,
      dislikes: 0,
      helpfulVotes: 3,
      status: 'published',
      isVerifiedPurchase: true
    },
    {
      id: '3',
      productId: 'prod-3',
      productName: '–•–ª–µ–± —Ä–µ–º–µ—Å–ª–µ–Ω–Ω—ã–π –Ω–∞ –∑–∞–∫–≤–∞—Å–∫–µ',
      productImage: '/images/products/bread.jpg',
      shopId: 'shop-2',
      shopName: '–ü–µ–∫–∞—Ä–Ω—è "–¢—Ä–∞–¥–∏—Ü–∏—è"',
      orderId: 'ORD-2025-001232',
      rating: 3,
      title: '–°—Ä–µ–¥–Ω–µ',
      comment: '–•–ª–µ–± –Ω–µ–ø–ª–æ—Ö–æ–π, –Ω–æ –æ–∂–∏–¥–∞–ª –±–æ–ª—å—à–µ–≥–æ –æ—Ç —Ä–µ–º–µ—Å–ª–µ–Ω–Ω–æ–π –≤—ã–ø–µ—á–∫–∏.',
      pros: ['–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'],
      cons: ['–°—É—Ö–æ–≤–∞—Ç', '–î–æ—Ä–æ–≥–æ'],
      images: [],
      isRecommended: false,
      isAnonymous: true,
      createdAt: '2025-01-05T14:15:00',
      likes: 2,
      dislikes: 3,
      helpfulVotes: 1,
      status: 'published',
      isVerifiedPurchase: true
    },
    {
      id: '4',
      productId: 'prod-4',
      productName: '–ú—ë–¥ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ª–∏–ø–æ–≤—ã–π',
      productImage: '/images/products/honey.jpg',
      shopId: 'shop-3',
      shopName: '–ú–µ–¥–æ–≤–∞—è –ª–∞–≤–∫–∞',
      orderId: 'ORD-2025-001230',
      rating: 5,
      title: '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π –º—ë–¥!',
      comment: '–ù–∞—Å—Ç–æ—è—â–∏–π –ª–∏–ø–æ–≤—ã–π –º—ë–¥ —Å –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–º –∞—Ä–æ–º–∞—Ç–æ–º –∏ –≤–∫—É—Å–æ–º. –ö–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ.',
      pros: ['–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π', '–ê—Ä–æ–º–∞—Ç–Ω—ã–π', '–ì—É—Å—Ç–æ–π –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ü–∏–∏'],
      cons: [],
      images: ['/images/reviews/review4_1.jpg', '/images/reviews/review4_2.jpg'],
      isRecommended: true,
      isAnonymous: false,
      createdAt: '2025-01-03T09:45:00',
      likes: 20,
      dislikes: 0,
      helpfulVotes: 15,
      status: 'published',
      isVerifiedPurchase: true
    },
    {
      id: '5',
      productId: 'prod-5',
      productName: '–°—ã—Ä –¥–æ–º–∞—à–Ω–∏–π —Ç–≤–æ—Ä–æ–∂–Ω—ã–π',
      productImage: '/images/products/cheese.jpg',
      shopId: 'shop-4',
      shopName: '–°—ã—Ä–Ω–∞—è –ª–∞–≤–∫–∞',
      orderId: 'ORD-2025-001228',
      rating: 4,
      title: '–û–∂–∏–¥–∞—é –º–æ–¥–µ—Ä–∞—Ü–∏–∏',
      comment: '–•–æ—Ä–æ—à–∏–π –¥–æ–º–∞—à–Ω–∏–π —Å—ã—Ä —Å –Ω–µ–∂–Ω—ã–º –≤–∫—É—Å–æ–º...',
      pros: ['–ù–µ–∂–Ω—ã–π –≤–∫—É—Å', '–°–≤–µ–∂–∏–π'],
      cons: ['–ú–∞–ª–µ–Ω—å–∫–∏–π –∫—É—Å–æ—á–µ–∫'],
      images: [],
      isRecommended: true,
      isAnonymous: false,
      createdAt: '2025-01-01T16:20:00',
      likes: 0,
      dislikes: 0,
      helpfulVotes: 0,
      status: 'pending',
      isVerifiedPurchase: true
    }
  ])

  const [filterStatus, setFilterStatus] = useState<'all' | Review['status']>('all')
  const [filterRating, setFilterRating] = useState<'all' | number>('all')
  const [sortBy, setSortBy] = useState<'date' | 'rating' | 'helpful'>('date')
  const [showEditModal, setShowEditModal] = useState(false)
  const [showDeleteModal, setShowDeleteModal] = useState(false)
  const [selectedReview, setSelectedReview] = useState<Review | null>(null)
  const [showImageModal, setShowImageModal] = useState(false)
  const [selectedImage, setSelectedImage] = useState<string>('')

  useEffect(() => {
    window.scrollTo(0, 0)
  }, [])

  const getStatusBadge = (status: Review['status']) => {
    const statusConfig = {
      published: { label: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω', className: 'status-published' },
      pending: { label: '–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏', className: 'status-pending' },
      rejected: { label: '–û—Ç–∫–ª–æ–Ω–µ–Ω', className: 'status-rejected' }
    }
    
    const config = statusConfig[status]
    return <span className={`status-badge ${config.className}`}>{config.label}</span>
  }

  const getRatingStars = (rating: number) => {
    return '‚≠ê'.repeat(rating) + '‚òÜ'.repeat(5 - rating)
  }

  const formatDate = (dateString: string) => {
    const date = new Date(dateString)
    return date.toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    })
  }

  const handleEditReview = (review: Review) => {
    setSelectedReview(review)
    setShowEditModal(true)
  }

  const handleDeleteReview = (review: Review) => {
    setSelectedReview(review)
    setShowDeleteModal(true)
  }

  const handleConfirmDelete = () => {
    if (selectedReview) {
      setReviews(prev => prev.filter(r => r.id !== selectedReview.id))
      setShowDeleteModal(false)
      setSelectedReview(null)
    }
  }

  const handleImageClick = (image: string) => {
    setSelectedImage(image)
    setShowImageModal(true)
  }

  const filteredReviews = reviews
    .filter(review => {
      if (filterStatus !== 'all' && review.status !== filterStatus) return false
      if (filterRating !== 'all' && review.rating !== filterRating) return false
      return true
    })
    .sort((a, b) => {
      switch (sortBy) {
        case 'date':
          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()
        case 'rating':
          return b.rating - a.rating
        case 'helpful':
          return b.helpfulVotes - a.helpfulVotes
        default:
          return 0
      }
    })

  const stats = {
    totalReviews: reviews.length,
    publishedReviews: reviews.filter(r => r.status === 'published').length,
    averageRating: reviews.length > 0 
      ? (reviews.reduce((sum, r) => sum + r.rating, 0) / reviews.length).toFixed(1) 
      : '0',
    totalLikes: reviews.reduce((sum, r) => sum + r.likes, 0),
    totalHelpfulVotes: reviews.reduce((sum, r) => sum + r.helpfulVotes, 0)
  }

  return (
    <div className="user-reviews-page">
      <div className="page-header">
        <div className="container">
          <h1>–ú–æ–∏ –æ—Ç–∑—ã–≤—ã</h1>
          <nav className="breadcrumb">
            <Link to={ROUTES.HOME}>–ì–ª–∞–≤–Ω–∞—è</Link>
            <span>/</span>
            <Link to={ROUTES.USER_DASHBOARD}>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</Link>
            <span>/</span>
            <span>–ú–æ–∏ –æ—Ç–∑—ã–≤—ã</span>
          </nav>
        </div>
      </div>

      <div className="container">
        <div className="reviews-content">
          <div className="reviews-stats">
            <div className="stat-card">
              <div className="stat-icon">üìù</div>
              <div className="stat-info">
                <span className="stat-value">{stats.totalReviews}</span>
                <span className="stat-label">–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤</span>
              </div>
            </div>
            <div className="stat-card">
              <div className="stat-icon">‚úÖ</div>
              <div className="stat-info">
                <span className="stat-value">{stats.publishedReviews}</span>
                <span className="stat-label">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ</span>
              </div>
            </div>
            <div className="stat-card">
              <div className="stat-icon">‚≠ê</div>
              <div className="stat-info">
                <span className="stat-value">{stats.averageRating}</span>
                <span className="stat-label">–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥</span>
              </div>
            </div>
            <div className="stat-card">
              <div className="stat-icon">üëç</div>
              <div className="stat-info">
                <span className="stat-value">{stats.totalLikes}</span>
                <span className="stat-label">–õ–∞–π–∫–æ–≤</span>
              </div>
            </div>
            <div className="stat-card">
              <div className="stat-icon">üí°</div>
              <div className="stat-info">
                <span className="stat-value">{stats.totalHelpfulVotes}</span>
                <span className="stat-label">–ü–æ–ª–µ–∑–Ω–æ</span>
              </div>
            </div>
          </div>

          <div className="reviews-controls">
            <div className="filters">
              <select 
                value={filterStatus}
                onChange={(e) => setFilterStatus(e.target.value as any)}
                className="filter-select"
              >
                <option value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                <option value="published">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ</option>
                <option value="pending">–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</option>
                <option value="rejected">–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ</option>
              </select>

              <select 
                value={filterRating}
                onChange={(e) => setFilterRating(e.target.value === 'all' ? 'all' : Number(e.target.value))}
                className="filter-select"
              >
                <option value="all">–í—Å–µ –æ—Ü–µ–Ω–∫–∏</option>
                <option value={5}>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê (5)</option>
                <option value={4}>‚≠ê‚≠ê‚≠ê‚≠ê‚òÜ (4)</option>
                <option value={3}>‚≠ê‚≠ê‚≠ê‚òÜ‚òÜ (3)</option>
                <option value={2}>‚≠ê‚≠ê‚òÜ‚òÜ‚òÜ (2)</option>
                <option value={1}>‚≠ê‚òÜ‚òÜ‚òÜ‚òÜ (1)</option>
              </select>

              <select 
                value={sortBy}
                onChange={(e) => setSortBy(e.target.value as any)}
                className="sort-select"
              >
                <option value="date">–ü–æ –¥–∞—Ç–µ</option>
                <option value="rating">–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É</option>
                <option value="helpful">–ü–æ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç–∏</option>
              </select>
            </div>
          </div>

          {filteredReviews.length === 0 ? (
            <div className="no-reviews">
              <div className="no-reviews-icon">üìù</div>
              <h3>–û—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
              <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –æ—Ç–∑—ã–≤</p>
              <Link to={ROUTES.USER_ORDERS} className="browse-orders-btn">
                –ú–æ–∏ –∑–∞–∫–∞–∑—ã
              </Link>
            </div>
          ) : (
            <div className="reviews-list">
              {filteredReviews.map(review => (
                <div key={review.id} className="review-card">
                  <div className="review-header">
                    <div className="product-info">
                      <img 
                        src={review.productImage} 
                        alt={review.productName}
                        className="product-image"
                      />
                      <div className="product-details">
                        <Link 
                          to={`/product/${review.productId}`}
                          className="product-name"
                        >
                          {review.productName}
                        </Link>
                        <Link 
                          to={`/shop/${review.shopId}`}
                          className="shop-name"
                        >
                          {review.shopName}
                        </Link>
                        <span className="order-link">
                          –ó–∞–∫–∞–∑: <Link to={`/user/orders/${review.orderId}`}>{review.orderId}</Link>
                        </span>
                      </div>
                    </div>
                    
                    <div className="review-meta">
                      {getStatusBadge(review.status)}
                      <div className="review-actions">
                        {review.status === 'published' || review.status === 'pending' ? (
                          <button 
                            className="edit-btn"
                            onClick={() => handleEditReview(review)}
                          >
                            ‚úèÔ∏è
                          </button>
                        ) : null}
                        <button 
                          className="delete-btn"
                          onClick={() => handleDeleteReview(review)}
                        >
                          üóëÔ∏è
                        </button>
                      </div>
                    </div>
                  </div>

                  <div className="review-body">
                    <div className="review-rating">
                      <span className="stars">{getRatingStars(review.rating)}</span>
                      <span className="rating-text">({review.rating}/5)</span>
                      {review.isVerifiedPurchase && (
                        <span className="verified-badge">‚úì –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –ø–æ–∫—É–ø–∫–∞</span>
                      )}
                    </div>

                    <h3 className="review-title">{review.title}</h3>
                    <p className="review-comment">{review.comment}</p>

                    {review.pros.length > 0 && (
                      <div className="review-pros-cons">
                        <div className="pros">
                          <h4>üëç –î–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞:</h4>
                          <ul>
                            {review.pros.map((pro, index) => (
                              <li key={index}>{pro}</li>
                            ))}
                          </ul>
                        </div>
                        {review.cons.length > 0 && (
                          <div className="cons">
                            <h4>üëé –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:</h4>
                            <ul>
                              {review.cons.map((con, index) => (
                                <li key={index}>{con}</li>
                              ))}
                            </ul>
                          </div>
                        )}
                      </div>
                    )}

                    {review.images.length > 0 && (
                      <div className="review-images">
                        <h4>üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:</h4>
                        <div className="images-grid">
                          {review.images.map((image, index) => (
                            <img 
                              key={index}
                              src={image}
                              alt={`–§–æ—Ç–æ ${index + 1}`}
                              className="review-image"
                              onClick={() => handleImageClick(image)}
                            />
                          ))}
                        </div>
                      </div>
                    )}

                    <div className="review-recommendation">
                      <span className={`recommendation ${review.isRecommended ? 'yes' : 'no'}`}>
                        {review.isRecommended ? 'üëç –†–µ–∫–æ–º–µ–Ω–¥—É—é' : 'üëé –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é'}
                      </span>
                      {review.isAnonymous && (
                        <span className="anonymous-badge">ü•∏ –ê–Ω–æ–Ω–∏–º–Ω–æ</span>
                      )}
                    </div>
                  </div>

                  <div className="review-footer">
                    <div className="review-stats">
                      <span className="likes">üëç {review.likes}</span>
                      <span className="dislikes">üëé {review.dislikes}</span>
                      <span className="helpful">üí° {review.helpfulVotes} –ø–æ–ª–µ–∑–Ω–æ</span>
                    </div>
                    
                    <div className="review-dates">
                      <span className="created-date">
                        –°–æ–∑–¥–∞–Ω: {formatDate(review.createdAt)}
                      </span>
                      {review.updatedAt && (
                        <span className="updated-date">
                          –ò–∑–º–µ–Ω–µ–Ω: {formatDate(review.updatedAt)}
                        </span>
                      )}
                    </div>
                  </div>

                  {review.moderatorComment && (
                    <div className="moderator-comment">
                      <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:</strong> {review.moderatorComment}
                    </div>
                  )}
                </div>
              ))}
            </div>
          )}

          <div className="reviews-tips">
            <div className="tips-section">
              <h3>üí° –ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–∑—ã–≤</h3>
              <div className="tips-grid">
                <div className="tip">
                  <span className="tip-icon">üéØ</span>
                  <div>
                    <h4>–ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏</h4>
                    <p>–û–ø–∏—à–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–∞</p>
                  </div>
                </div>
                <div className="tip">
                  <span className="tip-icon">üì∑</span>
                  <div>
                    <h4>–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ</h4>
                    <p>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç –¥—Ä—É–≥–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º</p>
                  </div>
                </div>
                <div className="tip">
                  <span className="tip-icon">‚öñÔ∏è</span>
                  <div>
                    <h4>–í–∑–≤–µ—à–µ–Ω–Ω–æ –æ—Ü–µ–Ω–∏–≤–∞–π—Ç–µ</h4>
                    <p>–£–∫–∞–∂–∏—Ç–µ –∏ –ø–ª—é—Å—ã, –∏ –º–∏–Ω—É—Å—ã —Ç–æ–≤–∞—Ä–∞</p>
                  </div>
                </div>
                <div className="tip">
                  <span className="tip-icon">ü§ù</span>
                  <div>
                    <h4>–ë—É–¥—å—Ç–µ —á–µ—Å—Ç–Ω—ã–º–∏</h4>
                    <p>–í–∞—à –æ–ø—ã—Ç –ø–æ–º–æ–∂–µ—Ç –¥—Ä—É–≥–∏–º —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Delete Confirmation Modal */}
      {showDeleteModal && selectedReview && (
        <div className="modal-overlay" onClick={() => setShowDeleteModal(false)}>
          <div className="modal-content delete-modal" onClick={e => e.stopPropagation()}>
            <div className="modal-header">
              <h2>–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞</h2>
              <button 
                className="close-btn"
                onClick={() => setShowDeleteModal(false)}
              >
                ‚úï
              </button>
            </div>
            
            <div className="modal-body">
              <p className="warning-message">
                ‚ö†Ô∏è –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –æ—Ç–∑—ã–≤?
              </p>
              <div className="review-preview">
                <h4>{selectedReview.title}</h4>
                <p>–¢–æ–≤–∞—Ä: {selectedReview.productName}</p>
                <p>–†–µ–π—Ç–∏–Ω–≥: {getRatingStars(selectedReview.rating)}</p>
              </div>
              <p className="note">–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.</p>
            </div>

            <div className="modal-footer">
              <button 
                className="cancel-btn"
                onClick={() => setShowDeleteModal(false)}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button 
                className="delete-btn"
                onClick={handleConfirmDelete}
              >
                –£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Image Modal */}
      {showImageModal && (
        <div className="modal-overlay" onClick={() => setShowImageModal(false)}>
          <div className="modal-content image-modal" onClick={e => e.stopPropagation()}>
            <div className="modal-header">
              <h2>–§–æ—Ç–æ –∏–∑ –æ—Ç–∑—ã–≤–∞</h2>
              <button 
                className="close-btn"
                onClick={() => setShowImageModal(false)}
              >
                ‚úï
              </button>
            </div>
            
            <div className="modal-body">
              <img src={selectedImage} alt="–§–æ—Ç–æ –∏–∑ –æ—Ç–∑—ã–≤–∞" className="modal-image" />
            </div>
          </div>
        </div>
      )}
    </div>
  )
}