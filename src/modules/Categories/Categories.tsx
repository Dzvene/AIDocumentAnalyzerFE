import React, { useEffect, useState } from 'react'
import './Categories.scss'

interface Category {
  id: number
  name: string
  description: string
  icon: string
  productCount: number
}

export const Categories: React.FC = () => {
  const [categories, setCategories] = useState<Category[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    // TODO: Replace with API call
    const mockCategories: Category[] = [
      { id: 1, name: '–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è', description: '–°–≤–µ–∂–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å', icon: 'üçé', productCount: 234 },
      { id: 2, name: '–ù–∞–ø–∏—Ç–∫–∏', description: '–°–æ–∫–∏, –≤–æ–¥–∞, –≥–∞–∑–∏—Ä–æ–≤–∫–∞', icon: 'ü•§', productCount: 156 },
      { id: 3, name: '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', description: '–ú–æ–ª–æ–∫–æ, —Å—ã—Ä, –π–æ–≥—É—Ä—Ç', icon: 'ü•õ', productCount: 89 },
      { id: 4, name: '–•–ª–µ–± –∏ –≤—ã–ø–µ—á–∫–∞', description: '–°–≤–µ–∂–∏–π —Ö–ª–µ–±', icon: 'üçû', productCount: 67 },
      { id: 5, name: '–ú—è—Å–æ –∏ —Ä—ã–±–∞', description: '–°–≤–µ–∂–µ–µ –º—è—Å–æ –∏ —Ä—ã–±–∞', icon: 'ü•©', productCount: 112 },
      { id: 6, name: '–û–≤–æ—â–∏ –∏ —Ñ—Ä—É–∫—Ç—ã', description: '–°–µ–∑–æ–Ω–Ω—ã–µ –æ–≤–æ—â–∏ –∏ —Ñ—Ä—É–∫—Ç—ã', icon: 'ü•¶', productCount: 198 },
      { id: 7, name: '–°–Ω–µ–∫–∏', description: '–ß–∏–ø—Å—ã, –æ—Ä–µ—Ö–∏, —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã', icon: 'ü•®', productCount: 143 },
      { id: 8, name: '–ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', description: '–ü–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã –∏ –º–æ—Ä–æ–∂–µ–Ω–æ–µ', icon: 'üßä', productCount: 87 },
    ]
    
    setTimeout(() => {
      setCategories(mockCategories)
      setLoading(false)
    }, 500)
  }, [])

  return (
    <div className="categories-page">
      <div className="container">
        <div className="categories-header">
          <h1 className="categories-title">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤</h1>
          <p className="categories-subtitle">–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</p>
        </div>

        {loading ? (
          <div className="categories-loading">
            <div className="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...</p>
          </div>
        ) : (
          <div className="categories-grid">
            {categories.map((category) => (
              <div key={category.id} className="category-card">
                <div className="category-icon">{category.icon}</div>
                <h3 className="category-name">{category.name}</h3>
                <p className="category-description">{category.description}</p>
                <div className="category-footer">
                  <span className="product-count">{category.productCount} —Ç–æ–≤–∞—Ä–æ–≤</span>
                  <button className="category-link">
                    –ü–µ—Ä–µ–π—Ç–∏
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  )
}