import React, { useState, useEffect } from 'react'
import { Link } from 'react-router-dom'
import { ROUTES } from '@constants/routes'
import './Blog.scss'

interface BlogPost {
  id: number
  title: string
  excerpt: string
  content: string
  author: string
  date: string
  readTime: string
  category: string
  image: string
  tags: string[]
}

export const Blog: React.FC = () => {
  const [posts, setPosts] = useState<BlogPost[]>([])
  const [loading, setLoading] = useState(true)
  const [selectedCategory, setSelectedCategory] = useState<string>('all')
  const [searchQuery, setSearchQuery] = useState('')

  useEffect(() => {
    // TODO: Replace with actual API call
    setTimeout(() => {
      const mockPosts: BlogPost[] = [
        {
          id: 1,
          title: '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Å–≤–µ–∂–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ',
          excerpt: '–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π, —Ñ—Ä—É–∫—Ç–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è.',
          content: '',
          author: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
          date: '2024-01-15',
          readTime: '5 –º–∏–Ω',
          category: '–°–æ–≤–µ—Ç—ã',
          image: 'https://via.placeholder.com/400x250',
          tags: ['–ø—Ä–æ–¥—É–∫—Ç—ã', '—Å–æ–≤–µ—Ç—ã', '–ø–æ–∫—É–ø–∫–∏']
        },
        {
          id: 2,
          title: '–¢–æ–ø-10 –º–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –Ω–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞',
          excerpt: '–û–±–∑–æ—Ä –ª—É—á—à–∏—Ö –º–µ—Å—Ç–Ω—ã—Ö —Ñ–µ—Ä–º–µ—Ä–æ–≤ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –Ω–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ.',
          content: '',
          author: '–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤',
          date: '2024-01-12',
          readTime: '8 –º–∏–Ω',
          category: '–û–±–∑–æ—Ä—ã',
          image: 'https://via.placeholder.com/400x250',
          tags: ['–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–∏', '–º–µ—Å—Ç–Ω—ã–µ', '–æ–±–∑–æ—Ä']
        },
        {
          id: 3,
          title: '–°–µ–∑–æ–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏: –∫–∞–∫ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤—ã–≥–æ–¥—É',
          excerpt: '–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –ø–æ–∫—É–ø–∫–∞—Ö.',
          content: '',
          author: '–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞',
          date: '2024-01-10',
          readTime: '4 –º–∏–Ω',
          category: '–ê–∫—Ü–∏–∏',
          image: 'https://via.placeholder.com/400x250',
          tags: ['–∞–∫—Ü–∏–∏', '—Å–∫–∏–¥–∫–∏', '—ç–∫–æ–Ω–æ–º–∏—è']
        },
        {
          id: 4,
          title: '–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞: –æ—Ç –º–∞–ª–µ–Ω—å–∫–æ–π –ª–∞–≤–∫–∏ –¥–æ —Å–µ—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤',
          excerpt: '–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—è –æ —Ç–æ–º, –∫–∞–∫ –Ω–µ–±–æ–ª—å—à–æ–π —Å–µ–º–µ–π–Ω—ã–π –±–∏–∑–Ω–µ—Å –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª—Å—è –≤ —É—Å–ø–µ—à–Ω—É—é —Ç–æ—Ä–≥–æ–≤—É—é —Å–µ—Ç—å.',
          content: '',
          author: '–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤',
          date: '2024-01-08',
          readTime: '10 –º–∏–Ω',
          category: '–ò—Å—Ç–æ—Ä–∏–∏',
          image: 'https://via.placeholder.com/400x250',
          tags: ['–±–∏–∑–Ω–µ—Å', '–∏—Å—Ç–æ—Ä–∏—è', '—É—Å–ø–µ—Ö']
        },
        {
          id: 5,
          title: '–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏: –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —à–æ–ø–∏–Ω–≥ –±–æ–ª–µ–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º',
          excerpt: '–ü—Ä–æ—Å—Ç—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à–∏ –ø–æ–∫—É–ø–∫–∏ –±–æ–ª–µ–µ —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–º–∏ –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º–∏.',
          content: '',
          author: '–ï–ª–µ–Ω–∞ –ó–µ–ª–µ–Ω–æ–≤–∞',
          date: '2024-01-05',
          readTime: '6 –º–∏–Ω',
          category: '–≠–∫–æ–ª–æ–≥–∏—è',
          image: 'https://via.placeholder.com/400x250',
          tags: ['—ç–∫–æ–ª–æ–≥–∏—è', '–æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å', '–∑–µ–ª–µ–Ω—ã–π']
        },
        {
          id: 6,
          title: '–ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ —Ç–æ—Ä–≥–æ–≤–ª–µ: —á—Ç–æ –∂–¥–µ—Ç –Ω–∞—Å –≤ –±—É–¥—É—â–µ–º',
          excerpt: '–û–±–∑–æ—Ä –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è—é—Ç –ø—Ä–∏–≤—ã—á–Ω—ã–π —à–æ–ø–∏–Ω–≥.',
          content: '',
          author: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –¢–µ—Ö–Ω–æ',
          date: '2024-01-03',
          readTime: '7 –º–∏–Ω',
          category: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
          image: 'https://via.placeholder.com/400x250',
          tags: ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏', '–±—É–¥—É—â–µ–µ']
        }
      ]
      setPosts(mockPosts)
      setLoading(false)
    }, 500)
  }, [])

  const categories = [
    { value: 'all', label: '–í—Å–µ —Å—Ç–∞—Ç—å–∏' },
    { value: '–°–æ–≤–µ—Ç—ã', label: '–°–æ–≤–µ—Ç—ã' },
    { value: '–û–±–∑–æ—Ä—ã', label: '–û–±–∑–æ—Ä—ã' },
    { value: '–ê–∫—Ü–∏–∏', label: '–ê–∫—Ü–∏–∏' },
    { value: '–ò—Å—Ç–æ—Ä–∏–∏', label: '–ò—Å—Ç–æ—Ä–∏–∏' },
    { value: '–≠–∫–æ–ª–æ–≥–∏—è', label: '–≠–∫–æ–ª–æ–≥–∏—è' },
    { value: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', label: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' }
  ]

  const filteredPosts = posts.filter(post => {
    const matchesCategory = selectedCategory === 'all' || post.category === selectedCategory
    const matchesSearch = post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                          post.excerpt.toLowerCase().includes(searchQuery.toLowerCase()) ||
                          post.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))
    return matchesCategory && matchesSearch
  })

  const formatDate = (dateString: string) => {
    const date = new Date(dateString)
    return date.toLocaleDateString('ru-RU', { 
      day: 'numeric', 
      month: 'long', 
      year: 'numeric' 
    })
  }

  const latestPost = filteredPosts[0]
  const otherPosts = filteredPosts.slice(1)

  return (
    <div className="blog-page">
      <div className="blog-hero">
        <div className="container">
          <h1 className="blog-hero__title">–ë–ª–æ–≥ OnLimitShop</h1>
          <p className="blog-hero__subtitle">
            –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏, –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–≤–µ—Ç—ã –æ –ø–æ–∫—É–ø–∫–∞—Ö –∏ –º–µ—Å—Ç–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö
          </p>
        </div>
      </div>

      <div className="container">
        <div className="blog-filters">
          <div className="blog-filters__categories">
            {categories.map(category => (
              <button
                key={category.value}
                className={`category-btn ${selectedCategory === category.value ? 'active' : ''}`}
                onClick={() => setSelectedCategory(category.value)}
              >
                {category.label}
              </button>
            ))}
          </div>
          <div className="blog-filters__search">
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –±–ª–æ–≥—É..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
            <span className="search-icon">üîç</span>
          </div>
        </div>

        {loading ? (
          <div className="blog-loading">
            <div className="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–µ–π...</p>
          </div>
        ) : (
          <>
            {latestPost && (
              <div className="blog-featured">
                <div className="blog-featured__image">
                  <img src={latestPost.image} alt={latestPost.title} />
                  <span className="category-badge">{latestPost.category}</span>
                </div>
                <div className="blog-featured__content">
                  <div className="meta">
                    <span className="date">{formatDate(latestPost.date)}</span>
                    <span className="separator">‚Ä¢</span>
                    <span className="author">{latestPost.author}</span>
                    <span className="separator">‚Ä¢</span>
                    <span className="read-time">üìñ {latestPost.readTime}</span>
                  </div>
                  <h2>
                    <Link to={`${ROUTES.BLOG}/${latestPost.id}`}>
                      {latestPost.title}
                    </Link>
                  </h2>
                  <p className="excerpt">{latestPost.excerpt}</p>
                  <div className="tags">
                    {latestPost.tags.map(tag => (
                      <span key={tag} className="tag">#{tag}</span>
                    ))}
                  </div>
                  <Link to={`${ROUTES.BLOG}/${latestPost.id}`} className="read-more">
                    –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ ‚Üí
                  </Link>
                </div>
              </div>
            )}

            <div className="blog-grid">
              {otherPosts.map(post => (
                <article key={post.id} className="blog-card">
                  <div className="blog-card__image">
                    <img src={post.image} alt={post.title} />
                    <span className="category-badge">{post.category}</span>
                  </div>
                  <div className="blog-card__content">
                    <div className="meta">
                      <span className="date">{formatDate(post.date)}</span>
                      <span className="separator">‚Ä¢</span>
                      <span className="read-time">{post.readTime}</span>
                    </div>
                    <h3>
                      <Link to={`${ROUTES.BLOG}/${post.id}`}>
                        {post.title}
                      </Link>
                    </h3>
                    <p className="excerpt">{post.excerpt}</p>
                    <div className="footer">
                      <span className="author">‚úçÔ∏è {post.author}</span>
                      <Link to={`${ROUTES.BLOG}/${post.id}`} className="read-link">
                        –ß–∏—Ç–∞—Ç—å ‚Üí
                      </Link>
                    </div>
                  </div>
                </article>
              ))}
            </div>

            {filteredPosts.length === 0 && (
              <div className="blog-empty">
                <span className="icon">üìù</span>
                <h3>–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
              </div>
            )}
          </>
        )}

        <div className="blog-sidebar">
          <div className="sidebar-widget">
            <h3>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏</h3>
            <div className="tag-cloud">
              <button className="tag-btn">–ø—Ä–æ–¥—É–∫—Ç—ã</button>
              <button className="tag-btn">—Å–æ–≤–µ—Ç—ã</button>
              <button className="tag-btn">–∞–∫—Ü–∏–∏</button>
              <button className="tag-btn">–º–µ—Å—Ç–Ω—ã–µ</button>
              <button className="tag-btn">—ç–∫–æ–ª–æ–≥–∏—è</button>
              <button className="tag-btn">—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</button>
              <button className="tag-btn">–¥–æ—Å—Ç–∞–≤–∫–∞</button>
              <button className="tag-btn">–∫–∞—á–µ—Å—Ç–≤–æ</button>
            </div>
          </div>

          <div className="sidebar-widget">
            <h3>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏</h3>
            <p>–ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç—å—è—Ö –∏ –∞–∫—Ü–∏—è—Ö</p>
            <form className="subscribe-form">
              <input 
                type="email" 
                placeholder="–í–∞—à email"
                required
              />
              <button type="submit">–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  )
}